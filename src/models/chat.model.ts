// models/Message.js
import mongoose from 'mongoose';
const { Schema } = mongoose;

import UserModel from '@/models/user.model.js';

const ChatSchema = new Schema({
  id: { type: Number, required: true },
  type: {
    type: String,
    enum: ['private', 'group', 'supergroup', 'channel'],
    required: true,
  },
  title: { type: String },
  username: { type: String },
  first_name: { type: String },
  last_name: { type: String },
  photo: { type: Schema.Types.Mixed },
  active_usernames: [{ type: String }],
  emoji_status_custom_emoji_id: { type: String },
  bio: { type: String },
  has_restricted_voice_and_video_messages: { type: Boolean },
  join_to_send_messages: { type: Boolean },
  join_by_request: { type: Boolean },
  description: { type: String },
  invite_link: { type: String },
  has_aggressive_anti_spam_enabled: { type: Boolean },
  has_hidden_members: { type: Boolean },
  pinned_message: { type: Schema.Types.Mixed },
  permissions: { type: Schema.Types.Mixed },
  can_set_sticker_set: { type: Boolean },
  sticker_set_name: { type: String },
  has_private_forwards: { type: Boolean },
  has_protected_content: { type: Boolean },
  slow_mode_delay: { type: Number },
  message_auto_delete_time: { type: Number },
  linked_chat_id: { type: Number },
  location: { type: Schema.Types.Mixed },
});

const MessageEntitySchema = new Schema({
  type: { type: String, required: true },
  offset: { type: Number, required: true },
  length: { type: Number, required: true },
  url: { type: String },
  user: { type: UserModel.schema },
  language: { type: String },
  custom_emoji_id: { type: String },
});

const MessageSchema = new Schema({
  message_id: { type: Number, required: true },
  message_thread_id: { type: Number },
  from: { type: UserModel.schema },
  date: { type: Number, required: true },
  chat: { type: ChatSchema, required: true },
  sender_chat: { type: ChatSchema },
  forward_from: { type: UserModel.schema },
  forward_from_chat: { type: ChatSchema },
  forward_from_message_id: { type: Number },
  forward_signature: { type: String },
  forward_sender_name: { type: String },
  forward_date: { type: Number },
  is_topic_message: { type: Boolean },
  reply_to_message: { type: Schema.Types.Mixed }, // Có thể lưu reference hoặc nhúng
  edit_date: { type: Number },
  media_group_id: { type: String },
  author_signature: { type: String },
  text: { type: String },
  entities: [MessageEntitySchema],
  caption_entities: [MessageEntitySchema],
  audio: { type: Schema.Types.Mixed }, // Có thể thêm các schema khác như Document, Video, Voice tương tự
  document: { type: Schema.Types.Mixed },
  animation: { type: Schema.Types.Mixed },
  game: { type: Schema.Types.Mixed },
  photo: [{ type: Schema.Types.Mixed }],
  sticker: { type: Schema.Types.Mixed },
  video: { type: Schema.Types.Mixed },
  voice: { type: Schema.Types.Mixed },
  video_note: { type: Schema.Types.Mixed },
  caption: { type: String },
  contact: { type: Schema.Types.Mixed },
  location: { type: Schema.Types.Mixed },
  venue: { type: Schema.Types.Mixed },
  poll: { type: Schema.Types.Mixed },
  new_chat_members: [{ type: UserModel.schema }],
  left_chat_member: { type: UserModel.schema },
  new_chat_title: { type: String },
  new_chat_photo: [{ type: Schema.Types.Mixed }],
  delete_chat_photo: { type: Boolean },
  group_chat_created: { type: Boolean },
  supergroup_chat_created: { type: Boolean },
  channel_chat_created: { type: Boolean },
  migrate_to_chat_id: { type: Number },
  migrate_from_chat_id: { type: Number },
  pinned_message: { type: Schema.Types.Mixed },
  invoice: { type: Schema.Types.Mixed },
  successful_payment: { type: Schema.Types.Mixed },
  connected_website: { type: String },
  passport_data: { type: Schema.Types.Mixed },
  reply_markup: { type: Schema.Types.Mixed },
  web_app_data: { type: Schema.Types.Mixed },
  is_automatic_forward: { type: Boolean },
  has_protected_content: { type: Boolean },
  dice: { type: Schema.Types.Mixed },
  forum_topic_created: { type: Schema.Types.Mixed },
  forum_topic_edited: { type: Schema.Types.Mixed },
  forum_topic_closed: { type: Schema.Types.Mixed },
  forum_topic_reopened: { type: Schema.Types.Mixed },
  general_forum_topic_hidden: { type: Schema.Types.Mixed },
  general_forum_topic_unhidden: { type: Schema.Types.Mixed },
  has_media_spoiler: { type: Boolean },
  user_shared: { type: Schema.Types.Mixed },
  chat_shared: { type: Schema.Types.Mixed },
});

const MessageModel = mongoose.model('Message', MessageSchema);
const ChatModel = mongoose.model('Chat', ChatSchema);

export { MessageModel, ChatModel };
